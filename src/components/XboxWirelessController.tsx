/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from "@react-three/drei";
import * as THREE from "three";
import { GLTF } from "three-stdlib";

type GLTFResult = GLTF & {
  nodes: {
    ["abxy-buttons"]: THREE.Mesh;
    ["abxy-buttons-exterior"]: THREE.Mesh;
    ["view-menu-share-buttons"]: THREE.Mesh;
    ["side-grip-edges"]: THREE.Mesh;
    ["back-grip-edges"]: THREE.Mesh;
    ["body-top-case"]: THREE.Mesh;
    bumpers: THREE.Mesh;
    ["back-case"]: THREE.Mesh;
    ["d-pad"]: THREE.Mesh;
    ["nexus-quads"]: THREE.Mesh;
    ports: THREE.Mesh;
    triggers: THREE.Mesh;
    ["thumbsticks-base"]: THREE.Mesh;
    ["thumbsticks-grip"]: THREE.Mesh;
    ["battery-door"]: THREE.Mesh;
    ["body-side-caps"]: THREE.Mesh;
    ["battery-door-gloss"]: THREE.Mesh;
  };
  materials: {
    Material: THREE.MeshStandardMaterial;
  };
};

export function XboxWirelessController(props: JSX.IntrinsicElements["group"]) {
  const { nodes, materials } = useGLTF(
    "/models/xbox-wireless-controller.glb"
  ) as GLTFResult;
  return (
    <group {...props} dispose={null}>
      <group name="Scene">
        <mesh
          name="abxy-buttons"
          castShadow
          receiveShadow
          geometry={nodes["abxy-buttons"].geometry}
          material={materials.Material}
          userData={{ name: "abxy-buttons" }}
        />
        <mesh
          name="abxy-buttons-exterior"
          castShadow
          receiveShadow
          geometry={nodes["abxy-buttons-exterior"].geometry}
          material={materials.Material}
          userData={{ name: "abxy-buttons-exterior" }}
        />
        <mesh
          name="view-menu-share-buttons"
          castShadow
          receiveShadow
          geometry={nodes["view-menu-share-buttons"].geometry}
          material={materials.Material}
          userData={{ name: "view-menu-share-buttons" }}
        />
        <mesh
          name="side-grip-edges"
          castShadow
          receiveShadow
          geometry={nodes["side-grip-edges"].geometry}
          material={materials.Material}
          userData={{ name: "side-grip-edges" }}
        />
        <mesh
          name="back-grip-edges"
          castShadow
          receiveShadow
          geometry={nodes["back-grip-edges"].geometry}
          material={materials.Material}
          userData={{ name: "back-grip-edges" }}
        />
        <mesh
          name="body-top-case"
          castShadow
          receiveShadow
          geometry={nodes["body-top-case"].geometry}
          material={materials.Material}
          userData={{ name: "body-top-case" }}
        />
        <mesh
          name="bumpers"
          castShadow
          receiveShadow
          geometry={nodes.bumpers.geometry}
          material={materials.Material}
          userData={{ name: "bumpers" }}
        />
        <mesh
          name="back-case"
          castShadow
          receiveShadow
          geometry={nodes["back-case"].geometry}
          material={materials.Material}
          userData={{ name: "back-case" }}
        />
        <mesh
          name="d-pad"
          castShadow
          receiveShadow
          geometry={nodes["d-pad"].geometry}
          material={materials.Material}
          userData={{ name: "d-pad" }}
        />
        <mesh
          name="nexus-quads"
          castShadow
          receiveShadow
          geometry={nodes["nexus-quads"].geometry}
          material={materials.Material}
          userData={{ name: "nexus-quads" }}
        />
        <mesh
          name="ports"
          castShadow
          receiveShadow
          geometry={nodes.ports.geometry}
          material={materials.Material}
          userData={{ name: "ports" }}
        />
        <mesh
          name="triggers"
          castShadow
          receiveShadow
          geometry={nodes.triggers.geometry}
          material={materials.Material}
          userData={{ name: "triggers" }}
        />
        <mesh
          name="thumbsticks-base"
          castShadow
          receiveShadow
          geometry={nodes["thumbsticks-base"].geometry}
          material={materials.Material}
          userData={{ name: "thumbsticks-base" }}
        />
        <mesh
          name="thumbsticks-grip"
          castShadow
          receiveShadow
          geometry={nodes["thumbsticks-grip"].geometry}
          material={materials.Material}
          userData={{ name: "thumbsticks-grip" }}
        />
        <mesh
          name="battery-door"
          castShadow
          receiveShadow
          geometry={nodes["battery-door"].geometry}
          material={materials.Material}
          userData={{ name: "battery-door" }}
        />
        <mesh
          name="body-side-caps"
          castShadow
          receiveShadow
          geometry={nodes["body-side-caps"].geometry}
          material={materials.Material}
          userData={{ name: "body-side-caps" }}
        />
        <mesh
          name="battery-door-gloss"
          castShadow
          receiveShadow
          geometry={nodes["battery-door-gloss"].geometry}
          material={materials.Material}
          userData={{ name: "battery-door-gloss" }}
        />
        <group
          name="Controller_Empty"
          userData={{ name: "Controller_Empty" }}
        />
        <group
          name="Empty001"
          position={[-1.998, -1.582, 1.203]}
          userData={{ name: "Empty.001" }}
        />
      </group>
    </group>
  );
}

useGLTF.preload("/models/xbox-wireless-controller.glb");
